#
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: LEDE-R4se

on:
  watch:
    types: started
  push:
    branches: ["master"]
    tags: ["v*.*.*"]

permissions:
  contents: read

jobs:
  build_openwrt:
    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
                                  bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
                                  git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
                                  libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
                                  mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
                                  libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
                                  vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Custom config
        run: |
          sed -i 's/192.168.1.1/10.24.4.1/g' package/base-files/files/bin/config_generate
          sed -i "s/hostname='OpenWrt'/hostname='LicsberR4Se'/g" package/base-files/files/bin/config_generate

          echo 'CONFIG_TARGET_rockchip=y' >> .config
          echo 'CONFIG_TARGET_rockchip_armv8=y' >> .config
          echo 'CONFIG_TARGET_rockchip_armv8_DEVICE_friendlyarm_nanopi-r4se=y' >> .config
          echo 'CONFIG_TARGET_ROOTFS_PARTSIZE=800' >> .config

          echo 'CONFIG_PACKAGE_ipv6helper=y' >> .config
          echo 'CONFIG_PACKAGE_ip6tables-extra=y' >> .config
          echo 'CONFIG_PACKAGE_ip6tables-mod-nat=y' >> .config

          echo 'CONFIG_PACKAGE_quectel-CM-5G=y' >> .config
          echo 'CONFIG_PACKAGE_usb-modeswitch=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-mii=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-net=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-wdm=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-net-qmi-wwan=y' >> .config
          echo 'CONFIG_PACKAGE_uqmi=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-net-cdc-mbim=y' >> .config
          echo 'CONFIG_PACKAGE_umbim=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-serial-option=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-serial=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-serial-wwan=y' >> .config
          echo 'CONFIG_PACKAGE_luci-proto-qmi=y' >> .config
          echo 'CONFIG_PACKAGE_kmod-usb-net-rndis=y' >> .config

          echo 'CONFIG_PACKAGE_fdisk=y' >> .config
          echo 'CONFIG_PACKAGE_screen=y' >> .config
          echo 'CONFIG_PACKAGE_iperf3=y' >> .config

          echo 'CONFIG_PACKAGE_luci-app-dockerman=y' >> .config
          echo 'CONFIG_PACKAGE_docker-compose=y' >> .config

          echo 'CONFIG_PACKAGE_python3-pip=y' >> .config

          echo 'CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y' >> .config

          echo 'CONFIG_PACKAGE_luci-app-adbyby-plus=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-socat=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-serverchan=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-openvpn-server=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-hd-idle=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-wireguard=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-samba4=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-unblockNeteaseMusic=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-sqm=y' >> .config
          echo 'CONFIG_PACKAGE_luci-app-vsftpd=y' >> .config

          echo '# CONFIG_PACKAGE_luci-app-xlnetacc is not set' >> .config
          echo '# CONFIG_PACKAGE_luci-app-accesscontrol is not set' >> .config
          echo '# CONFIG_PACKAGE_luci-app-nlbwmon is not set' >> .config

          cat .config

      - name: Generate configuration file
        run: |
          make defconfig
          cat .config

      - name: Show diff
        run: ./scripts/diffconfig.sh

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          export SOC_CFLAGS="-march=armv8-a+crypto+crc -mcpu=cortex-a73.cortex-a53+crypto+crc -mtune=cortex-a73.cortex-a53"
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: LicsberR4Se_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: LicsberR4Se_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: LicsberR4Se_firmware
          path: ./bin/targets/
